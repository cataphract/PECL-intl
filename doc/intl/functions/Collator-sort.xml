<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<refentry xml:id="function.collator-sort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Collator->sort()</refname>
  <refpurpose>Sort array using specified collator.</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Collator->sort</methodname>
   <methodparam><type>array</type><parameter>arr</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>sort_flag</parameter></methodparam>
  </methodsynopsis>
<!---
  <para>
   All languages (even those using the same alphabet) do not necessarily have the same
   concept of alphabetical order. Do not assume that alphabetical order is the same as the
   numerical order of the character's codepoint values. In practice, 'a' is distinct from 'A'
   and 'b' is distinct from 'B'. Each has a different codepoint. This means that you can not
   use a bitwise lexical comparison (such as what strcmp() provides), to sort uservisible
   lists.
  <para>
  </para>
   Not all languages interpret the same characters as equivalent. If a character's case is
   changed it is not always a onetoone mapping. Accent differences, the presence or
   absence of certain characters, and even spelling differences might be insignificant when
   determining whether two strings are equal. The Collator services provide significant help
   in this area.
  </para>
-->
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>arr</parameter></term>
     <listitem>
      <para>
       Array of strings to sort.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sort_flag</parameter></term>
     <listitem>
      <para>
       Optional sorting type, one of the following:
      </para>
      <para>
       <itemizedlist>
        <listitem>
	 <para>
          <constant>Collator::SORT_REGULAR</constant> - compare items normally (don't change types)
	 </para>
        </listitem>
        <listitem>
	 <para>
          <constant>Collator::SORT_NUMERIC</constant> - compare items numerically
	 </para>
        </listitem>
        <listitem>
	 <para>
          <constant>Collator::SORT_STRING</constant>  - compare items as strings
	 </para>
        </listitem>
       </itemizedlist>
      </para>
      <para>
       Default sort_flag value is <constant>Collator::SORT_REGULAR</constant>.
       <footnote>
        <para>
         Note: If sort_flag has invalid value, then <constant>Collator::SORT_REGULAR</constant> value will applied.
	</para>
       </footnote>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns <type>boolean</type> &true; on success or <type>boolean</type> &false; on failure.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>Collator->sort</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
    $arr = array( 'Köpfe', 'Kypper', 'Kopfe' );
    $coll = new Collator( 'sv' );
    $coll->sort( $arr );
    var_export( $arr );
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array (
  0 => 'Kopfe',
  1 => 'Kypper',
  2 => 'Köpfe',
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>collator_sort</function></member>
    <member><function>Collator->asort</function></member>
    <member><function>Collator->sortWithSortKeys</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
